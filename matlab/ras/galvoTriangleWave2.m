function [waveform, blank_signal] = galvoTriangleWave2(voltages, maxAccel, dt)
% this function is similar to galvoTriangleWave() but instead of perfect
% linear sweeps, an array of voltages is passed for the linear part. This
% array is determined by a calibration procedure. 

    range = voltages(end) - voltages(1);
    sweepTime = length(voltages) .* dt;
    slope = range/sweepTime;
    tTurnaround = dt:dt:(abs(slope) / maxAccel);
    vTurnaround = sign(slope) .* (-maxAccel * tTurnaround.^2 / 2 + abs(slope) * tTurnaround);
    waveform = [-flip(vTurnaround(1:(end-1))) +  voltages(1), ...
                voltages, ...
                vTurnaround + voltages(end), ...
                flip(vTurnaround(1:(end-1))) + voltages(end), ...
                flip(voltages),...
                -vTurnaround +  voltages(1)];
    blank_signal = [...
        zeros(1, length(vTurnaround)-1),...
        ones(1, length(voltages)),...
        zeros(1, 2*length(vTurnaround)-1),...
        ones(1, length(voltages)),...
        zeros(1, length(vTurnaround))];
end
    